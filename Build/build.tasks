<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<Import Project="$(FrameworkDir)\$(FrameworkVersion)\Microsoft.Common.Tasks"/>

<!-- Read version number from converter and set it to properties -->
<Target Name="GetConverterVersion">
<GetAssemblyIdentity AssemblyFiles="..\Output\Release\Fb2ePub.exe">
		<Output TaskParameter="Assemblies" ItemName="FB2ePubAssemblyInfo"/>
	</GetAssemblyIdentity>
	<PropertyGroup>	
        <Pattern>(\d+)\.?(\d+)\.?(\d+)\.?(\d+)</Pattern>
        <In>%(FB2ePubAssemblyInfo.Version)</In>
        <OutVersionMajor>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern)).Groups[1].Value)</OutVersionMajor>
        <OutVersionMinor>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern)).Groups[2].Value)</OutVersionMinor>
        <OutVersionBuild>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern)).Groups[3].Value)</OutVersionBuild>
        <OutVersionRevision>$([System.Text.RegularExpressions.Regex]::Match($(In), $(Pattern)).Groups[4].Value)</OutVersionRevision>
    </PropertyGroup>	
</Target>

<!-- Write version number to latest_ver.xml used for version check by internet  -->
<Target Name="UpdateVersionInXML" DependsOnTargets="GetConverterVersion">
	<XmlPoke  XmlInputPath="latest_ver.xml" Query="version/major" Value="$(OutVersionMajor)" /> 
	<XmlPoke  XmlInputPath="latest_ver.xml" Query="version/minor" Value="$(OutVersionMinor)" /> 
	<XmlPoke  XmlInputPath="latest_ver.xml" Query="version/build" Value="$(OutVersionBuild)" /> 
	<XmlPoke  XmlInputPath="latest_ver.xml" Query="version/revision" Value="$(OutVersionRevision)" /> 
</Target>

<!-- Archive installation into a single archive file -->
<Target Name="CreateInstallationArchive" DependsOnTargets="GetConverterVersion">
	<PropertyGroup>
		<ArchiveFileName>$(ArchiveLocation)Fb2ePubSetup_$(OutVersionMajor)_$(OutVersionMinor)_$(OutVersionBuild).zip</ArchiveFileName>
	</PropertyGroup>
	<Message Text="Archiver=$(Archiver)" />
	<Message Text="ArchiverParams=$(ArchiverParams)" />
	<Message Text="ArchiveFileName=$(ArchiveFileName)" />
	<Message Text="ArchiveSource=$(ArchiveSource)" />
	<Message Text="Creating archive $(ArchiveFileName)" />
	<Exec Command="$(Archiver) $(ArchiverParams) $(ArchiveFileName) $(ArchiveSource)" WorkingDirectory="$(PROJ_ROOT)">
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
	</Exec>
</Target>

<!-- Creates minimal (without installation) program archive for distribution without setup -->
<Target Name="CreateStandAloneArchive" DependsOnTargets="GetConverterVersion">
	<PropertyGroup>
		<ArchiveFileName>$(ArchiveLocation)Fb2ePubMINI_$(OutVersionMajor)_$(OutVersionMinor)_$(OutVersionBuild).zip</ArchiveFileName>
	</PropertyGroup>
	<Message Text="Archiver=$(Archiver)" />
	<Message Text="ArchiverParams=$(ArchiverParams)" />
	<Message Text="ArchiveFileName=$(ArchiveFileName)" />
	<Message Text="ProjectRoot=$(PROJ_ROOT)" />
	<Message Text="Creating archive $(ArchiveFileName)" />
	<Exec Command="$(Archiver) $(ArchiverParams) $(ArchiveFileName) -ep1 @$(PROJ_ROOT)Build\standalone.lst" WorkingDirectory="$(PROJ_ROOT)">
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
	</Exec>
</Target>

<!-- Performs cleanup of output folder -->
<Target Name="CleanupMain">
	<PropertyGroup>
		<ReleaseFolder>$(OutputPath)Release</ReleaseFolder>
		<x86Folder>$(OutputPath)x86</x86Folder>
		<x64Folder>$(OutputPath)x64</x64Folder>
		<PluginsFolder>$(OutputPath)Plugins</PluginsFolder>
	</PropertyGroup>
	<Message Text="Deleting old outputs from $(ReleaseFolder)" />
	<RemoveDir Directories="$(ReleaseFolder)" />
	<Message Text="Deleting old outputs from $(x86Folder)" />
	<RemoveDir Directories="$(x86Folder)" />
	<Message Text="Deleting old outputs from $(x64Folder)" />
	<RemoveDir Directories="$(x64Folder)" />
	<Message Text="Deleting old XPI outputs from $(PluginsFolder)" />
	<ItemGroup>
		<FilesToDelete Include="$(PluginsFolder)\*.xpi"/>
	</ItemGroup>
	<Delete Files="@(FilesToDelete)" />
</Target>

<!-- Performs cleanup of output folder -->
<Target Name="CleanupFFPlugin">
	<PropertyGroup>
		<PluginsOutFolder>$(PROJ_ROOT)FFPlugin\Fb2ePubPlugin\components</PluginsOutFolder>
	</PropertyGroup>
	<Message Text="Deleting old XPI outputs from $(PluginsOutFolder)" />
	<ItemGroup>
		<FilesToDelete Include="$(PluginsOutFolder)\*.*"/>
	</ItemGroup>
	<Delete Files="@(FilesToDelete)" />
</Target>

<!-- Creates Firefox XPI archive -->
<Target Name="CreateFFXPIArchive">
	<PropertyGroup>
		<PluginDataLocation>$(PROJ_ROOT)FFPlugin\Fb2ePubPlugin\*.*</PluginDataLocation>
		<ArchiveFileName>$(PROJ_ROOT)Output\Plugins\fb2epub_plugin@fb2epub.net.xpi</ArchiveFileName>
	</PropertyGroup>
	<Message Text="Archiver=$(Archiver)" />
	<Message Text="ArchiverParams=$(ArchiverParams)" />
	<Message Text="ArchiveFileName=$(ArchiveFileName)" />
	<Message Text="Creating archive $(ArchiveFileName)" />
	<Exec Command="$(Archiver) $(ArchiverParams) $(ArchiveFileName) $(PluginDataLocation)"  WorkingDirectory="$(PROJ_ROOT)">
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
	</Exec>
</Target>

<Target Name="CompileSetup">
	<PropertyGroup>
		<InnoCompiler>$(INNO_PATH)Compil32.exe</InnoCompiler>
		<SetupProject>$(PROJ_ROOT)Fb2ePubSetup\FB2ePubSetup.iss</SetupProject>
	</PropertyGroup>
	<Message Text="InnoCompiler=$(InnoCompiler)" />
	<Message Text="SetupProject=$(SetupProject)" />
	<Exec Command="$(InnoCompiler) /cc $(SetupProject)"  WorkingDirectory="$(PROJ_ROOT)">
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode"/>
	</Exec>
</Target>


</Project>