//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fb2epubSettings {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "10.0.0.0")]
    public sealed partial class Fb2Epub : global::System.Configuration.ApplicationSettingsBase {
        
        private static Fb2Epub defaultInstance = ((Fb2Epub)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Fb2Epub())));
        
        public static Fb2Epub Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool Transliterate {
            get {
                return ((bool)(this["Transliterate"]));
            }
            set {
                this["Transliterate"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TransliterateFileName {
            get {
                return ((bool)(this["TransliterateFileName"]));
            }
            set {
                this["TransliterateFileName"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool FB2Info {
            get {
                return ((bool)(this["FB2Info"]));
            }
            set {
                this["FB2Info"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("2")]
        public int FixMode {
            get {
                return ((int)(this["FixMode"]));
            }
            set {
                this["FixMode"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool AddSequences {
            get {
                return ((bool)(this["AddSequences"]));
            }
            set {
                this["AddSequences"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool TransliterateTOC {
            get {
                return ((bool)(this["TransliterateTOC"]));
            }
            set {
                this["TransliterateTOC"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool FlatStructure {
            get {
                return ((bool)(this["FlatStructure"]));
            }
            set {
                this["FlatStructure"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool ConvertAlphaPNG {
            get {
                return ((bool)(this["ConvertAlphaPNG"]));
            }
            set {
                this["ConvertAlphaPNG"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool EmbedStyles {
            get {
                return ((bool)(this["EmbedStyles"]));
            }
            set {
                this["EmbedStyles"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%bt% %sa.l%-%sn%")]
        public string SequenceFormat {
            get {
                return ((string)(this["SequenceFormat"]));
            }
            set {
                this["SequenceFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%bt% (%sf.l%)")]
        public string NoSequenceFormat {
            get {
                return ((string)(this["NoSequenceFormat"]));
            }
            set {
                this["NoSequenceFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%bt%")]
        public string NoSeriesFormat {
            get {
                return ((string)(this["NoSeriesFormat"]));
            }
            set {
                this["NoSeriesFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%f.c%%m.c%%l.c%%n.c:b%")]
        public string AuthorFormat {
            get {
                return ((string)(this["AuthorFormat"]));
            }
            set {
                this["AuthorFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("%l.c%f.c")]
        public string FileAsFormat {
            get {
                return ((string)(this["FileAsFormat"]));
            }
            set {
                this["FileAsFormat"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool Capitalize {
            get {
                return ((bool)(this["Capitalize"]));
            }
            set {
                this["Capitalize"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool SkipAboutPage {
            get {
                return ((bool)(this["SkipAboutPage"]));
            }
            set {
                this["SkipAboutPage"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool UseAdobeTemplate {
            get {
                return ((bool)(this["UseAdobeTemplate"]));
            }
            set {
                this["UseAdobeTemplate"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("")]
        public string AdobeTemplatePath {
            get {
                return ((string)(this["AdobeTemplatePath"]));
            }
            set {
                this["AdobeTemplatePath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("\r\n                  <FontSettings xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xm" +
            "lns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\r\n                    <FontF" +
            "amily name=\"Fonts_97c90146-e42b-47a4-ac20-da6427fe9b9f\">\r\n                      " +
            "<Font style=\"normal\" variant=\"normal\" width=\"400\" stretch=\"normal\">\r\n           " +
            "             <Source type=\"Embedded\" format=\"\">\r\n                          <Loca" +
            "tion>%ResourceFolder%\\Fonts/LiberationSerif-Regular.ttf</Location>\r\n            " +
            "            </Source>\r\n                      </Font>\r\n                      <Fon" +
            "t style=\"italic\" variant=\"normal\" width=\"400\" stretch=\"normal\">\r\n               " +
            "         <Source type=\"Embedded\" format=\"\">\r\n                          <Location" +
            ">%ResourceFolder%\\Fonts/LiberationSerif-Italic.ttf</Location>\r\n                 " +
            "       </Source>\r\n                      </Font>\r\n                      <Font sty" +
            "le=\"normal\" variant=\"normal\" width=\"700\" stretch=\"normal\">\r\n                    " +
            "    <Source type=\"Embedded\" format=\"\">\r\n                          <Location>%Res" +
            "ourceFolder%\\Fonts/LiberationSerif-Bold.ttf</Location>\r\n                        " +
            "</Source>\r\n                      </Font>\r\n                      <Font style=\"ita" +
            "lic\" variant=\"normal\" width=\"700\" stretch=\"normal\">\r\n                        <So" +
            "urce type=\"Embedded\" format=\"\">\r\n                          <Location>%ResourceFo" +
            "lder%\\Fonts/LiberationSerif-BoldItalic.ttf</Location>\r\n                        <" +
            "/Source>\r\n                      </Font>\r\n                    </FontFamily>\r\n    " +
            "                <CSSElement name=\"body\" class=\"\">\r\n                      <Font>F" +
            "onts_97c90146-e42b-47a4-ac20-da6427fe9b9f</Font>\r\n                    </CSSEleme" +
            "nt>\r\n                    <CSSElement name=\"code\" class=\"\">\r\n                    " +
            "  <Font>Fonts_97c90146-e42b-47a4-ac20-da6427fe9b9f</Font>\r\n                    <" +
            "/CSSElement>\r\n                    <CSSElement name=\"\" class=\"epub\">\r\n           " +
            "           <Font>Fonts_97c90146-e42b-47a4-ac20-da6427fe9b9f</Font>\r\n            " +
            "        </CSSElement>\r\n                  </FontSettings>\r\n                ")]
        public global::FontsSettings.EPubFontSettings Fonts
        {
            get {
                return ((global::FontsSettings.EPubFontSettings)(this["Fonts"]));
            }
            set {
                this["Fonts"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool DecorateFontNames {
            get {
                return ((bool)(this["DecorateFontNames"]));
            }
            set {
                this["DecorateFontNames"] = value;
            }
        }
    }
}
